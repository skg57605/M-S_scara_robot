<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="scara_robot">

    <xacro:arg name="use_sim" default="false"/>

    <!--가상 gazebo ros2 control 설정-->
    <xacro:if value="$(arg use_sim)">
        <ros2_control name="GazeboSystem" type="system">
            <hardware>
                <plugin>gazebo_ros2_control/GazeboSystem</plugin>
            </hardware>
            <joint name="joint_1">
                <command_interface name="position">
                    <param name="min">-3.14159</param>
                    <param name="max">3.14159</param>
                </command_interface>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
            </joint>
            <joint name="joint_2">
                <command_interface name="position">
                    <param name="min">-3.14159</param>
                    <param name="max">3.14159</param>
                </command_interface>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
            </joint>
        </ros2_control>
        <gazebo>
            <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
                <parameters>$(find scara_description)/config/scara_controllers.yaml</parameters>
            </plugin>
        </gazebo>
    
            <gazebo reference="link_1">
                <disable_collisions link1="base_link" link2="link_1" />
            </gazebo>
    
        <gazebo reference="link_2">
            <disable_collisions link1="link_1" link2="link_2" />
        </gazebo>
    </xacro:if>

    <!--실제 로봇 roe2 control 설정-->
    <!--<xacro:unless value="$(arg use_sim)">
        <ros2_control name="DynamixelSystem" type="system">
            <hardware>
                <plugin>dynamixel_workbench/DynamixelWorkbench</plugin>
                <param name="dynamixel_info">$(find scara_description)/config/dynamixel_info.yaml</param>
            </hardware>
            <joint name="joint_1">
                <command_interface name="position"/>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
            </joint>
            <joint name="joint_2">
                <command_interface name="position"/>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
            </joint>
        </ros2_control>
    </xacro:unless>-->
    <xacro:unless value="$(arg use_sim)">
        <ros2_control name="DynamixelSystem" type="system">
            <hardware>
                <plugin>dynamixel_hardware_interface/DynamixelHardware</plugin>
                <param name="port_name">/dev/ttyUSB0</param>
                <param name="baud_rate">57600</param>
                <param name="error_timeout_ms">500</param>
                <param name="number_of_joints">2</param>
                <param name="number_of_transmissions">2</param>
                <param name="dynamixel_model_folder">/param/dxl_model</param>
                <param name="disable_torque_at_init">true</param>
                <param name="transmission_to_joint_matrix">1,0,0,1</param>
                <param name="joint_to_transmission_matrix">1,0,0,1</param>
                <param name="dynamixel_state_pub_msg_name">dynamixel_hardware_interface/dxl_state</param>
                <param name="get_dynamixel_data_srv_name">dynamixel_hardware_interface/get_dxl_data</param>
                <param name="set_dynamixel_data_srv_name">dynamixel_hardware_interface/set_dxl_data</param>
                <param name="reboot_dxl_srv_name">dynamixel_hardware_interface/reboot_dxl</param>
                <param name="set_dxl_torque_srv_name">dynamixel_hardware_interface/set_dxl_torque</param>
                </hardware>

            <joint name="joint_1">
                <command_interface name="position"/>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
            </joint>
            <joint name="joint_2">
                <command_interface name="position"/>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
            </joint>

            <gpio name="joint_1_motor">
                <param name="type">dxl</param>
                <param name="ID">1</param>
                <command_interface name="Goal Position"/>
                <state_interface name="Present Position"/>
                <state_interface name="Present Velocity"/>
                <param name="Position P Gain">800</param>
                <param name="Position I Gain">100</param>
                <param name="Position D Gain">100</param>
                <param name="Profile Velocity">200</param>
                <param name="Profile Acceleration">50</param>
                <param name="Drive Mode">1</param>
            </gpio>
            <gpio name="joint_2_motor">
                <param name="type">dxl</param>
                <param name="ID">2</param>
                <command_interface name="Goal Position"/>
                <state_interface name="Present Position"/>
                <state_interface name="Present Velocity"/>
                <param name="Position P Gain">800</param>
                <param name="Position I Gain">100</param>
                <param name="Position D Gain">100</param>
                <param name="Profile Velocity">200</param>
                <param name="Profile Acceleration">50</param>
                <param name="Drive Mode">1</param>
            </gpio> 

            <transmission name="tran1">
                <plugin>transmission_interface/SimpleTransmissionLoader</plugin>
                <joint name="joint_1" role="joint"/>
                <actuator name="joint_1_motor" role="actuator"/>
            </transmission>
            <transmission name="tran2">
                <plugin>transmission_interface/SimpleTransmissionLoader</plugin>
                <joint name="joint_2" role="joint"/>
                <actuator name="joint_2_motor" role="actuator"/>
            </transmission>
        </ros2_control>
    </xacro:unless>

    <!-- 변수 및 재료 정의 -->
    <xacro:property name="link_1_length" value="0.2" />
    <xacro:property name="link_2_length" value="0.2" />
    <xacro:property name="link_radius" value="0.02" />
    <material name="blue"><color rgba="0.1 0.1 0.8 1.0"/></material>
    <material name="green"><color rgba="0.1 0.8 0.1 1.0"/></material>
    <material name="grey"><color rgba="0.5 0.5 0.5 1.0"/></material>

    <!-- 고정된 월드와 베이스 -->
    <link name="world" />
    <link name="base_link">
        <visual><geometry><cylinder radius="0.05" length="0.1"/></geometry><material name="grey"/></visual><!--링크 비주얼-->
        <collision><geometry><cylinder radius="0.05" length="0.1"/></geometry></collision><!--링크 충돌영역-->
        <inertial><mass value="1"/><inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/></inertial><!--링크 물리적특성-->
    </link>
    
    <joint name="world_to_base" type="fixed"><parent link="world"/><child link="base_link"/><origin xyz="0 0 0.05" rpy="0 0 0"/></joint>

    <!-- 링크 1 -->
    <link name="link_1">
        <visual><origin xyz="${link_1_length/2} 0 0"/><geometry><box size="${link_1_length} 0.04 0.04"/></geometry><material name="blue"/></visual>
        <collision><origin xyz="${link_1_length/2} 0 0"/><geometry><box size="${link_1_length} 0.04 0.04"/></geometry></collision>

        <inertial><mass value="0.2"/><origin xyz="${link_1_length/2} 0 0" rpy="0 0 0"/><inertia ixx="0.000054" ixy="0.0" ixz="0.0" iyy="0.000694" iyz="0.0" izz="0.000694"/></inertial>
    </link>

    <joint name="joint_1" type="revolute">
        <parent link="base_link" /><child link="link_1" />
        <origin xyz="0 0 ${0.1/2}" rpy="0 0 0"/>
        <axis xyz="0 0 1"/>
        <limit lower="-3.14159" upper="3.14159" effort="1.5" velocity="6.38791"/>
    </joint>
 
    <!-- 링크 2 -->
    <link name="link_2">
        <visual><origin xyz="${link_2_length/2} 0 0"/><geometry><box size="${link_2_length} 0.04 0.04"/></geometry><material name="green"/></visual>
        <collision><origin xyz="${link_2_length/2} 0 0"/><geometry><box size="${link_2_length} 0.04 0.04"/></geometry></collision>
        
        <inertial><mass value="0.2"/><origin xyz="${link_2_length/2} 0 0" rpy="0 0 0"/><inertia ixx="0.000054" ixy="0.0" ixz="0.0" iyy="0.000694" iyz="0.0" izz="0.000694"/></inertial>
    </link>
    
    <joint name="joint_2" type="revolute">
        <parent link="link_1" /><child link="link_2" />
        <origin xyz="${link_1_length} 0 0" rpy="0 0 0"/>
        <axis xyz="0 0 1"/>
        <limit lower="-3.14159" upper="3.14159" effort="1.5" velocity="6.38791"/>
    </joint>

    <!-- ROS2 CONTROL & GAZEBO PLUGIN -->

</robot>
